name: Test Workflow

on:
    push:
        branches:
            - master

jobs:
    test:
        name: Full test suite
        if: "!contains(github.event.head_commit.message, 'skip-ci')"
        runs-on: ubuntu-latest
        outputs:
            packageChanged: ${{ steps.check.outputs.changed }}

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - uses: actions/checkout@v1
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            # https://github.com/actions/cache
            - name: Cache node modules
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  # npm cache files are stored in `~/.npm` on Linux/macOS
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

              # Check if we need to deploy the electron application
            - name: Check if version has been updated
              id: check
              uses: EndBug/version-check@v1
              with:
                  diff-search: true

            # - name: Log when changed
            #   if: steps.check.outputs.changed == 'true'
            #   run: echo "::set-output name=check::true"

            - name: Log when changed
              if: steps.check.outputs.changed == 'true'
              run: 'echo "Version change found in commit ${{ steps.check.outputs.commit }}! New version: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'

            # - name: Log when unchanged
            #   if: steps.check.outputs.changed == 'false'
            #   run: echo "::set-output name=check::false"

            - name: Log when unchanged
              if: steps.check.outputs.changed == 'false'
              run: echo "No version change :/"

    deploy:
        name: Next job
        needs: test
        if: needs.test.outputs.packageChanged == 'true'
        runs-on: ubuntu-latest
        steps:
            - run: echo "Running Next Job"
